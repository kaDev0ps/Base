// Программа выводит массив из 8 эллементов заполненный нулями и еденицами в случайном порядке
// [1.0.1.1.1.0.1.1]
// Методы
/*
int input (string output)
{
     Console.Write(output);
     return Convert.ToInt32(Console.ReadLine());
}
/*
//первый вариант задать массив
int[] numbers; //создали массив 
numbers = new int[8]; // проинициализировали массив и поставили размер 8  
// второй вариант
int[] numbers3 = new int[4] { 0, 1, 2 , 3}; // задали массив и инициализировали его указав его значения
// третий вариант
int[] numbers4 = new int[] { 0, 1, 2 , 3}; // не указываем размер, он сам будет его считать по переменным. задали массив и инициализировали его указав его значения
*/
// сокращенный третий вариант
int[] numbers5 = { 0, 1, 2 , 3}; // не указываем размер, он сам будет его считать по переменным. задали массив и инициализировали его указав его значения
numbers5[0] = 8; // изменили значения на 8 у индекса элемента 1 . Все элементы по умолчанию равны 0
/*
for (int i = 0; i < numbers5.Length; i++)
{
     Console.Write(numbers5[i] + " "); // пройдет по всем индексам и выведит в консоль
}

// Можно вывести в метод
*/
/*PrintArray(numbers5);

void PrintArray(int[] array)
{
     for (int i = 0; i < numbers5.Length; i++)
          {
               Console.Write(numbers5[i] + " "); // пройдет по всем индексам и выведит в консоль
          }
          Console.WriteLine();
}
*/
// пример обмена с переменными
int a = 10;
int b = 5;
a = b;
b -= 3;
Console.WriteLine(a + " " + b); // a=5 b=3

// как работает этот метод с массивами
int[] x = {0, 0};
int[] y = {1, 1};
x = y;
y[0] = 5;
PrintArray(x);
PrintArray(y);
numbers[1] = new Random().Next(1, 10); // записываем случайное число в ячейку массива


void PrintArray(int[] array)
{
     for (int i = 0; i < array.Length; i++)
          {
               Console.Write(array[i] + " "); // пройдет по всем индексам и выведит в консоль
          }
          Console.WriteLine();
}
// таким образом массив работает как ссылка, поэтому нельзя его использовать, как обычную переменную